!function(r,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.jdSegmentUrl=e():r.jdSegmentUrl=e()}(this,(()=>(()=>{"use strict";var r={};return(()=>{var e=r;Object.defineProperty(e,"__esModule",{value:!0}),e.generateSegmentUrl=void 0,e.generateSegmentUrl=function(r){const{requestData:e,staticParam:t,dinamicParams:n}=r;let o=`${t}/`;return n.forEach((r=>{const{key:t,isKeyVisible:n,fieldType:a,transformValue:f}=r;if(!e.hasOwnProperty(t))throw new Error(`Parameter ${t} not found in request(requestData)`);n&&(o+=`${t}/`);const i=e[t];o+=f?function(r,e,t="string"){const{typeTransform:n,typeParams:o,func:a}=r;switch(n){case"CUSTOM":if(!a||"function"!=typeof a)throw new Error("Invalid function for custom transformValue");return function(r,e){return`${r(e)}/`}(a,e);case"ARRAY_TO_STR":if(!Array.isArray(e))throw new Error("Invalid value for transformValue typeTransform ARRAY_TO_STR");if("array"!==t)throw new Error("Invalid fieldType for transformValue typeTransform ARRAY_TO_STR");return function(r,e=","){return`${r.join(e)}/`}(e,null==o?void 0:o.separator);default:throw new Error("Invalid typeTransform for transformValue")}}(f,i,a):`${i}/`})),o}})(),r})()));